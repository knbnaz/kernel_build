name: Build MikaKernel


on:
  workflow_dispatch:


jobs:
  build-kernel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup environment
        run: |
          echo "ANYKERNEL_SOURCE=$(cat config.env | grep -w "ANYKERNEL_SOURCE" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "ANYKERNEL_SOURCE_BRANCH=$(cat config.env | grep -w "ANYKERNEL_SOURCE_BRANCH" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV

      - name: Setup build env
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential ccache curl flex \
          g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev \
          lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev \
          libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc \
          zip zlib1g-dev python3 python3-pip python3-pexpect python3-setuptools python3-serial python3-yaml \
          python-is-python3 git zstd lld
          
      - name: Cache build env
        id: cache-build-env
        uses: actions/cache@v3
        with:
          path: |
            clang
          key: ${{ runner.os }}-android-toolchain
          
      - name: Pull toolchain
        run: |
          git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 aarch64-linux-android-4.9
          git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 arm-linux-androideabi-4.9
          mkdir clang && curl https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android14-dev/clang-r487747c.tar.gz -RLO && tar -C clang/ -xf clang-*.tar.gz

      - name: Pull kernel source
        run: |
          git clone https://github.com/knbnaz/kernel_lge_sm8150 -b main kernel-source

      - name: Save Android toolchain
        if: steps.cache-build-env.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            clang
          key: ${{ runner.os }}-android-toolchain

      - name: Build kernel
        run: |
          export KBUILD_BUILD_USER="zclkkk"
          export KBUILD_BUILD_HOST="workspace"
          export PATH=$GITHUB_WORKSPACE/clang/bin:${PATH}
          cd kernel-source
          make ARCH=arm64 O=out CC=clang LD=ld.lld LLVM=1 CROSS_COMPILE=CROSS_COMPILE=$GITHUB_WORKSPACE/aarch64-linux-android-4.9/bin/aarch64-linux-android- CROSS_COMPILE_ARM32=$GITHUB_WORKSPACE/arm-linux-androideabi-4.9/bin/arm-linux-androideabi- CLANG_TRIPLE=aarch64-linux-gnu- vendor/lineageos_alpha_defconfig
          cd out && ../scripts/kconfig/merge_config.sh -m .config ../arch/arm64/configs/vendor/lineageos_alpha_defconfig && cd ..
          yes "" | make ARCH=arm64 O=out CC=clang LD=ld.lld LLVM=1 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CLANG_TRIPLE=aarch64-linux-gnu- oldconfig
          make -j$(nproc --all) ARCH=arm64 O=out CC=clang LD=ld.lld LLVM=1 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CLANG_TRIPLE=aarch64-linux-gnu- 2>&1 | tee build.log

      - name: Package kernel
        run: |
          git clone --depth=1 ${{ env.ANYKERNEL_SOURCE }} -b ${{ env.ANYKERNEL_SOURCE_BRANCH }} AnyKernel3 && rm -rf AnyKernel3/.git AnyKernel3/.github AnyKernel3/LICENSE AnyKernel3/README.md
          if [[ -f out/arch/arm64/boot/Image.gz-dtb ]]; then
            cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/Image.gz-dtb
          elif [[ -f out/arch/arm64/boot/Image-dtb ]]; then
            cp out/arch/arm64/boot/Image-dtb AnyKernel3/Image-dtb
          elif [[ -f out/arch/arm64/boot/Image.gz ]]; then
            cp out/arch/arm64/boot/Image.gz AnyKernel3/Image.gz
          elif [[ -f out/arch/arm64/boot/Image ]]; then
            cp out/arch/arm64/boot/Image AnyKernel3/Image
          fi
          if [ -f out/arch/arm64/boot/dtbo.img ]; then
            cp out/arch/arm64/boot/dtbo.img AnyKernel3/dtbo.img
          fi

      - name: Upload kernel to artifact
        uses: actions/upload-artifact@v4
        with:
          name: output_kernel
          path: AnyKernel3/*
